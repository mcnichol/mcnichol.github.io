{"version":3,"sources":["res/images/dapper.jpg","components/pages/blog/spring-icon.png","registerServiceWorker.js","components/title-bar/title-bar.js","components/code/code.js","components/code/java.js","components/pages/home/title.js","components/pages/home/home.js","components/pages/blog/post.js","components/pages/blog/blog.js","components/pages/about/about.js","components/pages/projects/projects.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","TitleBar","react_default","a","createElement","id","NavLink","exact","to","activeClassName","Component","Code","className","concat","this","props","styleName","language","code","Java","Prism","highlightAll","code_code","Title","testCode","titleCode","test","implCode","impl","java","Home","home_title","src","dapper","alt","Post","title","date","children","icon","Blog","blog_post","springIcon","About","Projects","App","title_bar_title_bar","Switch","Route","path","component","ReactDOM","render","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0ab1afcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dapper.69844fe4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spring-icon.539d308c.png\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom'\nimport './title-bar.scss';\n\n\nclass TitleBar extends Component {\n    render() {\n        return (\n            <div id='title-bar'>\n                <ul>\n                    <li><NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink></li>\n                    <li><NavLink to=\"/blog\" activeClassName=\"active\">Blog</NavLink></li>\n                    <li><NavLink to=\"/project\" activeClassName=\"active\">Projects</NavLink></li>\n                    <li><NavLink to=\"/about\" activeClassName=\"active\">About Me</NavLink></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default TitleBar;\n","import React, {Component} from 'react';\nimport './code.scss';\n\nclass Code extends Component {\n    render() {\n\n        return (\n            <div className={`${ this.props.styleName }`}>\n                <div className=\"terminal\">\n                    <ul className=\"terminal-dots\">\n                        <li/>\n                        <li/>\n                        <li/>\n                    </ul>\n                    <pre>\n                        <code className={`language-${this.props.language}`}>{this.props.code}</code>\n                    </pre>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Code;\n","import React, {Component} from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-java';\nimport './custom-prism-theme/darcula.css';\nimport Code from \"./code\";\n\nclass Java extends Component {\n\n    componentDidMount() {\n        Prism.highlightAll();\n    }\n\n    render() {\n        return (\n            <Code language='java' styleName={this.props.styleName} code={this.props.code}/>\n        )\n    }\n}\n\nexport default Java;","import React, {Component} from 'react';\nimport Java from \"../../code/java\";\nimport titleCode from './title-code'\nimport './title.scss'\n\nclass Title extends Component {\n    render() {\n        let testCode = titleCode.test;\n        let implCode = titleCode.impl;\n\n\n        return (\n            <div className=\"container\">\n                <div className='left-pad'/>\n                <Java styleName='test' code={testCode}/>\n                <Java styleName='impl' code={implCode}/>\n                <div className='right-pad'/>\n            </div>\n        )\n    }\n}\n\nexport default Title;\n","import React, {Component} from \"react\";\nimport Title from \"./title\";\nimport dapper from \"../../../res/images/dapper.jpg\"\n\nimport \"./home.scss\"\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"home\">\n                <Title/>\n                <div className=\"photo-container\">\n                    <img className=\"photo\" src={dapper} alt=\"dapper-icon\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;\n","import React, {Component} from \"react\";\n\nimport \"./post.scss\";\n\nclass Post extends Component {\n    render() {\n        return (\n            <div className=\"post\">\n                <div>\n                    <div className=\"heading-info\">\n                        <div className=\"title\">{this.props.title}</div>\n                        <div className=\"date\">{this.props.date}</div>\n                    </div>\n                    <div className=\"summary\">{this.props.children}</div>\n                </div>\n                <div className=\"image\"><img src={this.props.icon} alt=\"icon\"/></div>\n            </div>\n        );\n    }\n}\n\nexport default Post;\n","import React, {Component} from 'react';\nimport Post from './post';\n\nimport springIcon from \"./spring-icon.png\"\n\nimport \"./blog.scss\"\n\nclass Blog extends Component {\n    render() {\n        return (\n            <div className=\"blog\">\n                <div className=\"left-pad\"/>\n                <div className=\"container\">\n                    <Post date=\"20181010\" title=\"Implementing Custom Traces & Spans\" icon={springIcon}>Customize  logged traces and spans when using Spring Cloud Sleuth.</Post>\n                </div>\n                <div className=\"right-pad\"/>\n            </div>\n        )\n    }\n}\n\nexport default Blog;\n","import React, {Component} from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>About</div>\n        );\n    }\n}\n\nexport default About;","import React, {Component} from 'react';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div>Projects</div>\n        );\n    }\n}\n\nexport default Projects;","import React, {Component} from 'react';\nimport TitleBar from \"./components/title-bar/title-bar\";\nimport Home from \"./components/pages/home/home\";\nimport Blog from \"./components/pages/blog/blog\";\nimport About from \"./components/pages/about/about\";\nimport Projects from \"./components/pages/projects/projects\";\nimport {Route, Switch} from 'react-router-dom'\nimport './css/App.scss'\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n                <TitleBar/>\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/blog\" component={Blog}/>\n                    <Route path=\"/project\" component={Projects}/>\n                    <Route path=\"/about\" component={About}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App';\n\nimport './css/index.scss';\n\nReactDOM.render((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>), document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}